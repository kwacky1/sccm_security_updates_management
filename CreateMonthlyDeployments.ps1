$pilot = Get-Date 2016/01/17
$deploymentTime = '19:00:00'

$region1 = $pilot.AddDays(7)   # One week after pilot
$region2 = $region1.AddDays(1) # One day after
$cbd = $region2.AddDays(1)     # One day after
$all = $cbd.AddDays(5)         # Sunday after
$reboot = $all.AddDays(4)      # Thursday after

$pilot_deployment = Start-CMSoftwareUpdateDeployment -CollectionName "Workstation - 2 - Pilot" -SoftwareUpdateGroupName "Workstation - Monthly" -DeploymentAvailableDay $pilot.ToString("yyyy/MM/d") -DeploymentAvailableTime $deploymentTime -DeploymentName "Workstation - 2 - Pilot - Monthly" -DeploymentType Required -EnforcementDeadline $deploymentTime -EnforcementDeadlineDay $pilot.ToString("yyyy/MM/d") -PersistOnWriteFilterDevice $True -RestartServer $True -RestartWorkstation $True -SendWakeupPacket $True -TimeBasedOn LocalTime -UseBranchCache $True -UserNotification DisplayAll -VerbosityLevel OnlySuccessAndErrorMessages
Start-CMSoftwareUpdateDeployment -CollectionName "Workstation - 3 - Regional - Primary" -SoftwareUpdateGroupName "Workstation - Monthly" -DeploymentAvailableDay $region1.ToString("yyyy/MM/d") -DeploymentAvailableTime $deploymentTime -DeploymentName "Workstation - 3 - Regional - Primary - Monthly" -DeploymentType Required -EnforcementDeadline $deploymentTime -EnforcementDeadlineDay $region1.ToString("yyyy/MM/d") -PersistOnWriteFilterDevice $True -RestartServer $True -RestartWorkstation $True -SendWakeupPacket $True -TimeBasedOn LocalTime -UseBranchCache $True -UserNotification DisplayAll -VerbosityLevel OnlySuccessAndErrorMessages
Start-CMSoftwareUpdateDeployment -CollectionName "Workstation - 4 - Regional - Secondary" -SoftwareUpdateGroupName "Workstation - Monthly" -DeploymentAvailableDay $region2.ToString("yyyy/MM/d") -DeploymentAvailableTime $deploymentTime -DeploymentName "Workstation - 4 - Regional - Secondary - Monthly" -DeploymentType Required -EnforcementDeadline $deploymentTime -EnforcementDeadlineDay $region2.ToString("yyyy/MM/d") -PersistOnWriteFilterDevice $True -RestartServer $True -RestartWorkstation $True -SendWakeupPacket $True -TimeBasedOn LocalTime -UseBranchCache $True -UserNotification DisplayAll -VerbosityLevel OnlySuccessAndErrorMessages
Start-CMSoftwareUpdateDeployment -CollectionName "Workstation - 5 - CBD - Primary" -SoftwareUpdateGroupName "Workstation - Monthly" -DeploymentAvailableDay $cbd.ToString("yyyy/MM/d") -DeploymentAvailableTime $deploymentTime -DeploymentName "Workstation - 5 - CBD - Primary - Monthly" -DeploymentType Required -EnforcementDeadline $deploymentTime -EnforcementDeadlineDay $cbd.ToString("yyyy/MM/d") -PersistOnWriteFilterDevice $True -RestartServer $True -RestartWorkstation $True -SendWakeupPacket $True -TimeBasedOn LocalTime -UseBranchCache $True -UserNotification DisplayAll -VerbosityLevel OnlySuccessAndErrorMessages
Start-CMSoftwareUpdateDeployment -CollectionName "All Workstations" -SoftwareUpdateGroupName "Workstation - Monthly" -DeploymentAvailableDay $all.ToString("yyyy/MM/d") -DeploymentAvailableTime $deploymentTime -DeploymentName "Workstation - 6 - All Workstations - Monthly" -DeploymentType Required -EnforcementDeadline $deploymentTime -EnforcementDeadlineDay $reboot.ToString("yyyy/MM/d") -PersistOnWriteFilterDevice $True -RestartServer $True -RestartWorkstation $False -SendWakeupPacket $True -TimeBasedOn LocalTime -UseBranchCache $True -UserNotification DisplayAll -VerbosityLevel OnlySuccessAndErrorMessages

Write-Host "DeploymentID for Runsheer is $pilot_deployment.DeploymentID"